// <auto-generated />
using System;
using MachineMindApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MachineMindApi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MachineMindApi.Models.Angle", b =>
                {
                    b.Property<int>("AngleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AngleId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinalValue")
                        .HasColumnType("int");

                    b.Property<int>("InitialValue")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("AngleId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Angles");
                });

            modelBuilder.Entity("MachineMindApi.Models.Machine", b =>
                {
                    b.Property<string>("MachineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionLineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MachineId");

                    b.HasIndex("ProductionLineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("MachineMindApi.Models.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterId"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.HasIndex("LastModifiedByUserId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("MachineMindApi.Models.Plant", b =>
                {
                    b.Property<string>("PlantId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");

                    b.HasData(
                        new
                        {
                            PlantId = "EDI00226",
                            Name = "Planta de produccion 1 "
                        },
                        new
                        {
                            PlantId = "EDI00228",
                            Name = "Planta de produccion 2 "
                        });
                });

            modelBuilder.Entity("MachineMindApi.Models.ProductionLine", b =>
                {
                    b.Property<string>("ProductionLineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductionLineId");

                    b.HasIndex("PlantId");

                    b.ToTable("ProductionLines");
                });

            modelBuilder.Entity("MachineMindApi.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"), 1L, 1);

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.HasIndex("MachineId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("MachineMindApi.Models.User", b =>
                {
                    b.Property<string>("EmployeeNumberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeNumberId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MachineMindApi.Models.Angle", b =>
                {
                    b.HasOne("MachineMindApi.Models.User", "LastModifiedByUser")
                        .WithMany("LastModifiedAngles")
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineMindApi.Models.Recipe", "Recipe")
                        .WithMany("Angles")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MachineMindApi.Models.Machine", b =>
                {
                    b.HasOne("MachineMindApi.Models.ProductionLine", "ProductionLine")
                        .WithMany("Machines")
                        .HasForeignKey("ProductionLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionLine");
                });

            modelBuilder.Entity("MachineMindApi.Models.Parameter", b =>
                {
                    b.HasOne("MachineMindApi.Models.User", "LastModifiedByUser")
                        .WithMany("LastModifiedParameters")
                        .HasForeignKey("LastModifiedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MachineMindApi.Models.Recipe", "Recipe")
                        .WithMany("Parameters")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LastModifiedByUser");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MachineMindApi.Models.ProductionLine", b =>
                {
                    b.HasOne("MachineMindApi.Models.Plant", "Plant")
                        .WithMany("ProductionLines")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("MachineMindApi.Models.Recipe", b =>
                {
                    b.HasOne("MachineMindApi.Models.Machine", "Machine")
                        .WithMany("Recipes")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("MachineMindApi.Models.Machine", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("MachineMindApi.Models.Plant", b =>
                {
                    b.Navigation("ProductionLines");
                });

            modelBuilder.Entity("MachineMindApi.Models.ProductionLine", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("MachineMindApi.Models.Recipe", b =>
                {
                    b.Navigation("Angles");

                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("MachineMindApi.Models.User", b =>
                {
                    b.Navigation("LastModifiedAngles");

                    b.Navigation("LastModifiedParameters");
                });
#pragma warning restore 612, 618
        }
    }
}
